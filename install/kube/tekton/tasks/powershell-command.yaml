---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: powershell-cmd
spec:
  params:
  - name: SSH_USER
    description: The name of the user that should be used to ssh to the machine
    default: capi
  - name: SSH_SECRET_NAME
    description: The name of the secret that contains the private key to the nodes matching the TARGET_NODE_LABEL
  - name: SSH_KEY_NAME
    description: The name of the private key in the 
  - name: TARGET_NODE_LABEL
    description: The label to look for to determine on which nodes this command should be run
  - name: SCRIPTS_CONFIG_MAP
    description: the name of the configmap that holds all the scripts that we want to run
  - name: SCRIPT_NAME
    description: the name of the script in the configmap that we want to run on the target node
  steps:
  - name: run-cmd
    image: quay.io/mhildenb/win-demo-base:latest
    workingDir: /script-vol
    script: |
      #!/bin/zsh

      # Some debugging
      # echo "Home is $HOME and user is $(whoami)"
      # ls -al /scripts-vol
      # ls -al 
      # ls -al $HOME/.ssh

      NODE_NAME=$(oc get node -l $(params.TARGET_NODE_LABEL) -oName)
      if [[ -z "${NODE_NAME}" ]]; then
        echo "No nodes with matching label $(params.TARGET_NODE_LABEL)"
        exit 1
      fi

      NODE_IP=$(oc get node/win-1-59j54 -o jsonpath='{.status.addresses[?(@.type=="InternalIP")].address}')
      echo "Attempting to remote to the node ${NODE_NAME} [${NODE_IP}] with user $(params.SSH_USER)..."

      cat /scripts-vol/$(params.SCRIPT_NAME) | ssh -oStrictHostKeyChecking=no -i $HOME/.ssh/$(params.SSH_KEY_NAME) $(params.SSH_USER)@${NODE_IP} powershell -Command -
    volumeMounts:
    - name: ssh-secret
      mountPath: /tekton/home/.ssh
    - name: scripts-volume
      mountPath: /scripts-vol
  volumes:
    - name: ssh-secret
      secret:
          secretName: $(params.SSH_SECRET_NAME)
    - name: scripts-volume
      configMap:
          name: $(params.SCRIPTS_CONFIG_MAP)
